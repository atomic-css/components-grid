/* ==========================================================================
   Grid extension: layout
   ========================================================================== */

/**
 * Layout modifiers for `Grid`.
 */

/* Component modifiers
   ========================================================================== */

/* Cells size */

/**
 * Make all cells content-sized.
 */

.Grid--auto > .Grid-cell {
  width: auto;
}

/**
 * Make all cells equal main size.
 * Do not apply 'row' flow direction if .Grid--column is specified (specifity issue).
 */

.Grid--equalMain:not(.Grid--column) {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.Grid--equalMain > .Grid-cell {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

/**
 * Make all cells equal cross size.
 */

.Grid--equalCross > .Grid-cell {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

/* Grid columns */

/**
 * 1. Columns need to be laid out in rows.
 */

.Grid--2col,
.Grid--3col,
.Grid--4col {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row; /* 1 */
}

/**
 * 1. We are going to specify percentage width, so no flexing needed.
 */

.Grid--2col > .Grid-cell,
.Grid--3col > .Grid-cell,
.Grid--4col > .Grid-cell {
  -webkit-box-flex: 0;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none; /* 1 */
}

/**
 * Split into 2 columns.
 */

.Grid--2col > .Grid-cell {
  width: 50%;
}

/**
 * Split into 3 columns.
 */

.Grid--3col > .Grid-cell {
  width: 33.333%;
}

/**
 * Split into 4 columns.
 */

.Grid--4col > .Grid-cell {
  width: 25%;
}

/* Descendant modifiers
   ========================================================================== */

/**
 * Use atomic dimension utilities to apply size to a single cell
 */
