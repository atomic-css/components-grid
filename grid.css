/* ==========================================================================
   Grid
   ========================================================================== */

/**
 * Grid component
 *
 * Make use of dimension utilities, or components that extend `Grid` in order
 * to apply particular widths to cells.
 *
 * Example HTML:
 *
 * <div class="Grid">
 *   <div class="Grid-cell u-size1of2"></div>
 *   <div class="Grid-cell u-size1of2"></div>
 *   <div class="Grid-cell u-size1of3"></div>
 *   <div class="Grid-cell u-size1of3"></div>
 * </div>
 *
 * <div class="Grid Grid--justifyCenter">
 *   <div class="Grid-cell u-size1of3"></div>
 *   <div class="Grid-cell u-size1of3"></div>
 * </div>
 */

/* Component
   ========================================================================== */

/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Flow in rows and wrap by default.
 * 2. Account for browser defaults of elements that might be the root node of
 *    the component.
 */

.Grid {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap; /* 1 */
  padding: 0; /* 2 */
  margin: 0; /* 2 */
}

/* Component modifiers
   ========================================================================== */

/* Cells flow direction */

/**
 * Flow the cells in column direction.
 */

.Grid--column {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

/* Descendants
   ========================================================================== */

/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or component that extends `Grid`.
 *
 * 1. Full-width cells by default.
 */

.Grid-cell {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  width: 100%; /* 1 */
}
